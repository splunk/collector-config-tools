type: '*filelogreceiver.FileLogConfig'
doc: |
  FileLogConfig defines configuration for the filelog receiver
fields:
- name: attributes
  type: map[string]helper.ExprStringConfig
  kind: map
- name: resource
  type: map[string]helper.ExprStringConfig
  kind: map
- name: id
  kind: string
  default: file_input
- name: type
  kind: string
  default: file_input
- name: output
  type: '[]string'
  kind: slice
- name: include
  type: '[]string'
  kind: slice
- name: exclude
  type: '[]string'
  kind: slice
- name: exclude_older_than
  type: time.Duration
  kind: int64
  doc: |
    ExcludeOlderThan allows excluding files whose modification time is older
    than the specified age.
- name: ordering_criteria
  type: matcher.OrderingCriteria
  kind: struct
  fields:
  - name: regex
    kind: string
    default: ""
  - name: top_n
    kind: int
  - name: sort_by
    type: '[]matcher.Sort'
    kind: slice
    fields:
    - name: sort_type
      kind: string
      default: ""
    - name: regex_key
      kind: string
      default: ""
    - name: ascending
      kind: bool
      default: false
    - name: layout
      kind: string
      default: ""
      doc: |
        Timestamp only
    - name: location
      kind: string
      default: ""
- name: include_file_name
  kind: bool
  default: true
- name: include_file_path
  kind: bool
  default: false
- name: include_file_name_resolved
  kind: bool
  default: false
- name: include_file_path_resolved
  kind: bool
  default: false
- name: include_file_owner_name
  kind: bool
  default: false
- name: include_file_owner_group_name
  kind: bool
  default: false
- name: poll_interval
  type: time.Duration
  kind: int64
  default: 200ms
- name: max_concurrent_files
  kind: int
  default: 1024
- name: max_batches
  kind: int
- name: start_at
  kind: string
  default: end
- name: fingerprint_size
  type: helper.ByteSize
  kind: int64
  default: 1000
- name: max_log_size
  type: helper.ByteSize
  kind: int64
  default: 1048576
- name: encoding
  kind: string
  default: utf-8
- name: multiline
  type: split.Config
  kind: struct
  doc: |
    Config is the configuration for a split func
  fields:
  - name: line_start_pattern
    kind: string
    default: ""
  - name: line_end_pattern
    kind: string
    default: ""
  - name: omit_pattern
    kind: bool
    default: false
- name: preserve_leading_whitespaces
  kind: bool
  default: false
- name: preserve_trailing_whitespaces
  kind: bool
  default: false
- name: force_flush_period
  type: time.Duration
  kind: int64
  default: 500ms
- name: header
  type: '*fileconsumer.HeaderConfig'
  kind: ptr
  fields:
  - name: pattern
    kind: string
    default: ""
  - name: metadata_operators
    type: '[]operator.Config'
    kind: slice
    doc: |
      Config is the configuration of an operator
    fields:
    - name: builder
      type: operator.Builder
      kind: interface
- name: delete_after_read
  kind: bool
  default: false
- name: include_file_record_number
  kind: bool
  default: false
- name: compression
  kind: string
  default: ""
- name: acquire_fs_lock
  kind: bool
  default: false
- name: operators
  type: '[]operator.Config'
  kind: slice
  doc: |
    Config is the configuration of an operator
  fields:
  - name: builder
    type: operator.Builder
    kind: interface
- name: storage
  type: '*component.ID'
  kind: ptr
  doc: |
    ID represents the identity for a component. It combines two values:
    * type - the Type of the component.
    * name - the name of that component.
    The component ID (combination type + name) is unique for a given component.Kind.
- name: retry_on_failure
  type: consumerretry.Config
  kind: struct
  doc: |
    Config defines configuration for retrying batches in case of receiving a retryable error from a downstream
    consumer. If the retryable error doesn't provide a delay, exponential backoff is applied.
  fields:
  - name: enabled
    kind: bool
    default: false
    doc: |
      Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream
      consumer. Default is false.
  - name: initial_interval
    type: time.Duration
    kind: int64
    default: 1s
    doc: |
      InitialInterval the time to wait after the first failure before retrying. Default value is 1 second.
  - name: max_interval
    type: time.Duration
    kind: int64
    default: 30s
    doc: |
      MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between
      consecutive retries will always be `MaxInterval`. Default value is 30 seconds.
  - name: max_elapsed_time
    type: time.Duration
    kind: int64
    default: 5m0s
    doc: |
      MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to
      a downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.
      Default value is 5 minutes.
