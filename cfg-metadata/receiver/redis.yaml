type: '*redisreceiver.Config'
doc: |
  ControllerConfig defines common settings for a scraper controller
  configuration. Scraper controller receivers can embed this struct, instead
  of receiver.Settings, and extend it with more fields if needed.
fields:
- name: collection_interval
  type: time.Duration
  kind: int64
  default: 10s
  doc: |
    CollectionInterval sets how frequently the scraper
    should be called and used as the context timeout
    to ensure that scrapers don't exceed the interval.
- name: initial_delay
  type: time.Duration
  kind: int64
  default: 1s
  doc: |
    InitialDelay sets the initial start delay for the scraper,
    any non positive value is assumed to be immediately.
- name: timeout
  type: time.Duration
  kind: int64
  doc: |
    Timeout is an optional value used to set scraper's context deadline.
- name: endpoint
  kind: string
  default: ""
- name: transport
  type: confignet.TransportType
  kind: string
  default: tcp
- name: dialer
  type: confignet.DialerConfig
  kind: struct
  fields:
  - name: timeout
    type: time.Duration
    kind: int64
- name: username
  kind: string
  default: ""
  doc: |
    Optional username. Use the specified Username to authenticate the current connection
    with one of the connections defined in the ACL list when connecting
    to a Redis 6.0 instance, or greater, that is using the Redis ACL system.
- name: password
  type: configopaque.String
  kind: string
  default: ""
  doc: |
    Optional password. Must match the password specified in the
    requirepass server configuration option, or the user's password when connecting
    to a Redis 6.0 instance, or greater, that is using the Redis ACL system.
- name: tls
  type: configtls.ClientConfig
  kind: struct
  doc: |
    ClientConfig contains TLS configurations that are specific to client
    connections in addition to the common configurations. This should be used by
    components configuring TLS client connections.
  fields:
  - name: ca_file
    kind: string
    default: ""
    doc: |
      Path to the CA cert. For a client this verifies the server certificate.
      For a server this verifies client certificates. If empty uses system root CA.
      (optional)
  - name: ca_pem
    type: configopaque.String
    kind: string
    default: ""
    doc: |
      In memory PEM encoded cert. (optional)
  - name: include_system_ca_certs_pool
    kind: bool
    default: false
    doc: |
      If true, load system CA certificates pool in addition to the certificates
      configured in this struct.
  - name: cert_file
    kind: string
    default: ""
    doc: |
      Path to the TLS cert to use for TLS required connections. (optional)
  - name: cert_pem
    type: configopaque.String
    kind: string
    default: ""
    doc: |
      In memory PEM encoded TLS cert to use for TLS required connections. (optional)
  - name: key_file
    kind: string
    default: ""
    doc: |
      Path to the TLS key to use for TLS required connections. (optional)
  - name: key_pem
    type: configopaque.String
    kind: string
    default: ""
    doc: |
      In memory PEM encoded TLS key to use for TLS required connections. (optional)
  - name: min_version
    kind: string
    default: ""
    doc: |
      MinVersion sets the minimum TLS version that is acceptable.
      If not set, TLS 1.2 will be used. (optional)
  - name: max_version
    kind: string
    default: ""
    doc: |
      MaxVersion sets the maximum TLS version that is acceptable.
      If not set, refer to crypto/tls for defaults. (optional)
  - name: cipher_suites
    type: '[]string'
    kind: slice
    doc: |
      CipherSuites is a list of TLS cipher suites that the TLS transport can use.
      If left blank, a safe default list is used.
      See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.
  - name: reload_interval
    type: time.Duration
    kind: int64
    doc: |
      ReloadInterval specifies the duration after which the certificate will be reloaded
      If not set, it will never be reloaded (optional)
  - name: insecure
    kind: bool
    default: true
    doc: |
      In gRPC and HTTP when set to true, this is used to disable the client transport security.
      See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC.
      Please refer to https://godoc.org/crypto/tls#Config for more information.
      (optional, default false)
  - name: insecure_skip_verify
    kind: bool
    default: false
    doc: |
      InsecureSkipVerify will enable TLS but not verify the certificate.
  - name: server_name_override
    kind: string
    default: ""
    doc: |
      ServerName requested by client for virtual hosting.
      This sets the ServerName in the TLSConfig. Please refer to
      https://godoc.org/crypto/tls#Config for more information. (optional)
- name: metrics
  type: metadata.MetricsConfig
  kind: struct
  doc: |
    MetricsConfig provides config for redis metrics.
  fields:
  - name: redis.clients.blocked
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.clients.connected
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.clients.max_input_buffer
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.clients.max_output_buffer
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.cmd.calls
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.cmd.latency
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.cmd.usec
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.commands
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.commands.processed
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.connections.received
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.connections.rejected
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.cpu.time
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.db.avg_ttl
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.db.expires
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.db.keys
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keys.evicted
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keys.expired
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keyspace.hits
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keyspace.misses
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.latest_fork
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.maxmemory
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.memory.fragmentation_ratio
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.lua
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.peak
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.rss
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.used
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.net.input
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.net.output
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.rdb.changes_since_last_save
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.replication.backlog_first_byte_offset
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.replication.offset
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.replication.replica_offset
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.role
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.slaves.connected
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.uptime
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
- name: resource_attributes
  type: metadata.ResourceAttributesConfig
  kind: struct
  doc: |
    ResourceAttributesConfig provides config for redis resource attributes.
  fields:
  - name: redis.version
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: server.address
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: false
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: server.port
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: false
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
