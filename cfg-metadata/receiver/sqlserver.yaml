type: '*sqlserverreceiver.Config'
doc: |
  Config defines configuration for a sqlserver receiver.
fields:
- name: collection_interval
  type: time.Duration
  kind: int64
  default: 10s
  doc: |
    CollectionInterval sets how frequently the scraper
    should be called and used as the context timeout
    to ensure that scrapers don't exceed the interval.
- name: initial_delay
  type: time.Duration
  kind: int64
  default: 1s
  doc: |
    InitialDelay sets the initial start delay for the scraper,
    any non positive value is assumed to be immediately.
- name: timeout
  type: time.Duration
  kind: int64
  doc: |
    Timeout is an optional value used to set scraper's context deadline.
- name: metrics
  type: metadata.MetricsConfig
  kind: struct
  doc: |
    MetricsConfig provides config for sqlserver metrics.
  fields:
  - name: sqlserver.batch.request.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.batch.sql_compilation.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.batch.sql_recompilation.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.database.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.database.io
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.database.latency
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.database.operations
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.lock.wait.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.lock.wait_time.avg
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.page.buffer_cache.hit_ratio
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.page.checkpoint.flush.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.page.lazy_write.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.page.life_expectancy
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.page.operation.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.page.split.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.processes.blocked
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.resource_pool.disk.throttled.read.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.resource_pool.disk.throttled.write.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: sqlserver.transaction.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction.write.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction_log.flush.data.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction_log.flush.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction_log.flush.wait.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction_log.growth.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction_log.shrink.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.transaction_log.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: sqlserver.user.connection.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
- name: resource_attributes
  type: metadata.ResourceAttributesConfig
  kind: struct
  doc: |
    ResourceAttributesConfig provides config for sqlserver resource attributes.
  fields:
  - name: sqlserver.computer.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: false
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: sqlserver.database.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: sqlserver.instance.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: false
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
- name: instance_name
  kind: string
  default: ""
- name: computer_name
  kind: string
  default: ""
- name: password
  type: configopaque.String
  kind: string
  default: ""
  doc: |
    The following options currently do nothing. Functionality will be added in a future PR.
- name: port
  kind: uint
  default: 0
- name: server
  kind: string
  default: ""
- name: username
  kind: string
  default: ""
