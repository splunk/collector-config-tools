type: '*vcenterreceiver.Config'
doc: |
  Config is the configuration of the receiver
fields:
- name: collection_interval
  type: time.Duration
  kind: int64
  default: 2m0s
  doc: |
    CollectionInterval sets how frequently the scraper
    should be called and used as the context timeout
    to ensure that scrapers don't exceed the interval.
- name: initial_delay
  type: time.Duration
  kind: int64
  default: 1s
  doc: |
    InitialDelay sets the initial start delay for the scraper,
    any non positive value is assumed to be immediately.
- name: timeout
  type: time.Duration
  kind: int64
  doc: |
    Timeout is an optional value used to set scraper's context deadline.
- name: tls
  type: configtls.ClientConfig
  kind: struct
  doc: |
    ClientConfig contains TLS configurations that are specific to client
    connections in addition to the common configurations. This should be used by
    components configuring TLS client connections.
  fields:
  - name: ca_file
    kind: string
    default: ""
    doc: |
      Path to the CA cert. For a client this verifies the server certificate.
      For a server this verifies client certificates. If empty uses system root CA.
      (optional)
  - name: ca_pem
    type: configopaque.String
    kind: string
    default: ""
    doc: |
      In memory PEM encoded cert. (optional)
  - name: include_system_ca_certs_pool
    kind: bool
    default: false
    doc: |
      If true, load system CA certificates pool in addition to the certificates
      configured in this struct.
  - name: cert_file
    kind: string
    default: ""
    doc: |
      Path to the TLS cert to use for TLS required connections. (optional)
  - name: cert_pem
    type: configopaque.String
    kind: string
    default: ""
    doc: |
      In memory PEM encoded TLS cert to use for TLS required connections. (optional)
  - name: key_file
    kind: string
    default: ""
    doc: |
      Path to the TLS key to use for TLS required connections. (optional)
  - name: key_pem
    type: configopaque.String
    kind: string
    default: ""
    doc: |
      In memory PEM encoded TLS key to use for TLS required connections. (optional)
  - name: min_version
    kind: string
    default: ""
    doc: |
      MinVersion sets the minimum TLS version that is acceptable.
      If not set, TLS 1.2 will be used. (optional)
  - name: max_version
    kind: string
    default: ""
    doc: |
      MaxVersion sets the maximum TLS version that is acceptable.
      If not set, refer to crypto/tls for defaults. (optional)
  - name: cipher_suites
    type: '[]string'
    kind: slice
    doc: |
      CipherSuites is a list of TLS cipher suites that the TLS transport can use.
      If left blank, a safe default list is used.
      See https://go.dev/src/crypto/tls/cipher_suites.go for a list of supported cipher suites.
  - name: reload_interval
    type: time.Duration
    kind: int64
    doc: |
      ReloadInterval specifies the duration after which the certificate will be reloaded
      If not set, it will never be reloaded (optional)
  - name: insecure
    kind: bool
    default: false
    doc: |
      In gRPC and HTTP when set to true, this is used to disable the client transport security.
      See https://godoc.org/google.golang.org/grpc#WithInsecure for gRPC.
      Please refer to https://godoc.org/crypto/tls#Config for more information.
      (optional, default false)
  - name: insecure_skip_verify
    kind: bool
    default: false
    doc: |
      InsecureSkipVerify will enable TLS but not verify the certificate.
  - name: server_name_override
    kind: string
    default: ""
    doc: |
      ServerName requested by client for virtual hosting.
      This sets the ServerName in the TLSConfig. Please refer to
      https://godoc.org/crypto/tls#Config for more information. (optional)
- name: metrics
  type: metadata.MetricsConfig
  kind: struct
  doc: |
    MetricsConfig provides config for vcenter metrics.
  fields:
  - name: vcenter.cluster.cpu.effective
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.cpu.limit
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.host.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.memory.effective
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.memory.limit
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.vm.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.vm_template.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.vsan.congestions
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.vsan.latency.avg
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.vsan.operations
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.cluster.vsan.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.cluster.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.cpu.limit
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.datastore.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.disk.space
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.host.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.memory.limit
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datacenter.vm.count
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datastore.disk.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.datastore.disk.utilization
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.cpu.capacity
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.cpu.reserved
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.cpu.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.cpu.utilization
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.disk.latency.avg
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.disk.latency.max
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.disk.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.memory.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.memory.utilization
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.network.packet.drop.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.network.packet.error.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.network.packet.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.network.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.network.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.vsan.cache.hit_rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.vsan.congestions
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.vsan.latency.avg
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.vsan.operations
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.host.vsan.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.cpu.shares
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.cpu.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.memory.ballooned
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.memory.granted
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.memory.shares
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.memory.swapped
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.resource_pool.memory.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.cpu.readiness
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.cpu.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.cpu.utilization
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.disk.latency.avg
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.disk.latency.max
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.disk.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.disk.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.disk.utilization
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.memory.ballooned
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.memory.swapped
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.memory.swapped_ssd
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.memory.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.memory.utilization
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.network.packet.drop.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.network.packet.rate
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.network.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.network.usage
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.vsan.latency.avg
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.vsan.operations
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: vcenter.vm.vsan.throughput
    type: metadata.MetricConfig
    kind: struct
    doc: |
      MetricConfig provides common config for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
- name: resource_attributes
  type: metadata.ResourceAttributesConfig
  kind: struct
  doc: |
    ResourceAttributesConfig provides config for vcenter resource attributes.
  fields:
  - name: vcenter.cluster.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.datacenter.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.datastore.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.host.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.resource_pool.inventory_path
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.resource_pool.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.virtual_app.inventory_path
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.virtual_app.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.vm.id
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.vm.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.vm_template.id
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
  - name: vcenter.vm_template.name
    type: metadata.ResourceAttributeConfig
    kind: struct
    doc: |
      ResourceAttributeConfig provides common config for a particular resource attribute.
    fields:
    - name: enabled
      kind: bool
      default: true
    - name: metrics_include
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsInclude defines a list of filters for attribute values.
        If the list is not empty, only metrics with matching resource attribute values will be emitted.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
    - name: metrics_exclude
      type: '[]filter.Config'
      kind: slice
      doc: |
        Experimental: MetricsExclude defines a list of filters for attribute values.
        If the list is not empty, metrics with matching resource attribute values will not be emitted.
        MetricsInclude has higher priority than MetricsExclude.
      fields:
      - name: strict
        kind: string
        default: ""
      - name: regexp
        kind: string
        default: ""
- name: endpoint
  kind: string
  default: ""
- name: username
  kind: string
  default: ""
- name: password
  type: configopaque.String
  kind: string
  default: ""
